
plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "6.5.3"
    id "co.uzzu.dotenv.gradle" version "1.1.0"
    id "org.sonarqube" version "3.0"
}

group = 'de.pcmr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

bootJar {
    archiveBaseName = "PCMR"
    archiveVersion =  project.version
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'org.keycloak:keycloak-spring-boot-starter:+'
    implementation 'org.keycloak:keycloak-spring-security-adapter:+'
    implementation 'org.keycloak:keycloak-admin-client:+'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compile 'org.flywaydb:flyway-core:6.5.3'
    compile 'org.apache.commons:commons-lang3:+'
    compile 'org.apache.commons:commons-text:1.8'
    compile 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:+'
    compile 'org.modelmapper:modelmapper:2.+'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mariadb://'+env.PCMR_MYSQL_HOST.value+':'+env.MYSQL_DB_PORT.value+'/'+env.PCMR_MYSQL_DATABASE.value
    user = env.PCMR_MYSQL_USER.value
    password = env.PCMR_MYSQL_PASSWORD.value
}
